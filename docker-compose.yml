version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: crossline-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: crossline
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - crossline-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: crossline-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - crossline-network

  # Hardhat Node (Local Blockchain)
  hardhat:
    build:
      context: .
      dockerfile: docker/Dockerfile.hardhat
    container_name: crossline-hardhat
    restart: unless-stopped
    ports:
      - "8545:8545"
    volumes:
      - ./deployments:/app/deployments
    networks:
      - crossline-network
    command: npx hardhat node --hostname 0.0.0.0

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: crossline-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://mongodb:27017/crossline
      - REDIS_URL=redis://redis:6379
      - PORT=3001
      - CORS_ORIGIN=http://localhost:3000
    depends_on:
      - mongodb
      - redis
      - hardhat
    volumes:
      - ./deployments:/app/deployments:ro
    networks:
      - crossline-network

  # Frontend (React App)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - REACT_APP_BACKEND_URL=http://localhost:3001
    container_name: crossline-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - crossline-network

  # Nginx Reverse Proxy (Optional for production)
  nginx:
    image: nginx:alpine
    container_name: crossline-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - crossline-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  crossline-network:
    driver: bridge 